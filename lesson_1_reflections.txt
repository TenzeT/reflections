How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Was able to see what changed, change means possible error

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Can look at changes you've made and see what direction you took in the past. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Sometimes you don't want to make a change, it could break a program 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Can go different directions with both files, can choose a path later on. Easier to work on programs piece by piece as well. Smaller chunks rather than huge edit. Some files are needed all to run together to function. More clear log. 

How can you use the commands git log and git diff to view the history of files?

    Log can show you the history of changes you've made, by who, when. 
    Git diff can show you lines added and deleted (differences between the files)

How might using version control make you more confident to make changes that
could break something?

    Can easly revert back to the older version using 'git checkout <ID>'. Can also compare files where bug was introduced to figure out what happened/changed in the code. 

Now that you have your workspace set up, what do you want to try using Git for?

    For all projects including those assigned by University. With the slack team to collaborate. With friends to collaborate.  